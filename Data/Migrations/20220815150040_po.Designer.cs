// <auto-generated />
using System;
using GP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GP.Data.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20220815150040_po")]
    partial class po
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GP.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GP.Domain.Entities.Consultation", b =>
                {
                    b.Property<int>("CodeConsultation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MedecinFK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MedecinsMedecinId")
                        .HasColumnType("int");

                    b.Property<string>("Motif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientFK")
                        .HasColumnType("int");

                    b.Property<int?>("PatientsPatientId")
                        .HasColumnType("int");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RendezVous")
                        .HasColumnType("datetime2");

                    b.HasKey("CodeConsultation");

                    b.HasIndex("MedecinsMedecinId");

                    b.HasIndex("PatientsPatientId");

                    b.ToTable("Consultations");
                });

            modelBuilder.Entity("GP.Domain.Entities.DossierMedical", b =>
                {
                    b.Property<int>("CIN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Maladies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomPatient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomPatient")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CIN");

                    b.ToTable("Dossier");
                });

            modelBuilder.Entity("GP.Domain.Entities.Medecin", b =>
                {
                    b.Property<int>("MedecinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeMedecin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomMedecin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedecinId");

                    b.ToTable("Medecins");
                });

            modelBuilder.Entity("GP.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatedeNaissaonce")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DossierCIN")
                        .HasColumnType("int");

                    b.Property<int>("DossierMedicalFK")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tele")
                        .HasColumnType("bigint");

                    b.Property<string>("adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.HasIndex("DossierCIN");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("GP.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tele")
                        .HasColumnType("bigint");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.Property<string>("adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GP.Domain.Entities.Consultation", b =>
                {
                    b.HasOne("GP.Domain.Entities.Medecin", "Medecins")
                        .WithMany("Consultations")
                        .HasForeignKey("MedecinsMedecinId");

                    b.HasOne("GP.Domain.Entities.Patient", "Patients")
                        .WithMany("Consultations")
                        .HasForeignKey("PatientsPatientId");

                    b.Navigation("Medecins");

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("GP.Domain.Entities.Patient", b =>
                {
                    b.HasOne("GP.Domain.Entities.DossierMedical", "Dossier")
                        .WithMany("Patients")
                        .HasForeignKey("DossierCIN");

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("GP.Domain.Entities.DossierMedical", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("GP.Domain.Entities.Medecin", b =>
                {
                    b.Navigation("Consultations");
                });

            modelBuilder.Entity("GP.Domain.Entities.Patient", b =>
                {
                    b.Navigation("Consultations");
                });
#pragma warning restore 612, 618
        }
    }
}
